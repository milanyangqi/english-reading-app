{"ast":null,"code":"var _jsxFileName = \"/Users/zhangchenyu/Downloads/eng2025/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ReadingContent from './components/ReadingContent';\nimport WordDetail from './components/WordDetail';\nimport Header from './components/Header';\nimport TextInput from './components/TextInput';\nimport Settings from './components/Settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [processedText, setProcessedText] = useState([]);\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [wordDetails, setWordDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [settings, setSettings] = useState({\n    fontSize: 16,\n    lineHeight: 1.6,\n    showPhonetics: true,\n    autoPlayAudio: false\n  });\n\n  // 处理文本，将其分割成单词数组\n  const processText = () => {\n    if (!text.trim()) return;\n\n    // 将文本分割成单词，保留标点符号\n    const words = text.split(/\\s+/).map(word => {\n      // 去除单词前后的标点符号，但保留它们以便显示\n      const punctuationBefore = word.match(/^[^\\w\\s]+/) ? word.match(/^[^\\w\\s]+/)[0] : '';\n      const punctuationAfter = word.match(/[^\\w\\s]+$/) ? word.match(/[^\\w\\s]+$/)[0] : '';\n      const cleanWord = word.replace(/^[^\\w\\s]+|[^\\w\\s]+$/g, '');\n      return {\n        original: word,\n        clean: cleanWord.toLowerCase(),\n        punctuationBefore,\n        punctuationAfter,\n        highlighted: false\n      };\n    });\n    setProcessedText(words);\n  };\n\n  // 获取单词详情\n  const fetchWordDetails = async word => {\n    if (!word) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n      setWordDetails(response.data[0]);\n\n      // 如果设置了自动播放，则播放单词发音\n      if (settings.autoPlayAudio && response.data[0].phonetics && response.data[0].phonetics.length > 0) {\n        var _response$data$0$phon;\n        const audioUrl = (_response$data$0$phon = response.data[0].phonetics.find(p => p.audio)) === null || _response$data$0$phon === void 0 ? void 0 : _response$data$0$phon.audio;\n        if (audioUrl) {\n          const audio = new Audio(audioUrl);\n          audio.play();\n        }\n      }\n    } catch (err) {\n      setError('无法获取单词详情，请稍后再试。');\n      console.error('Error fetching word details:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理单词点击事件\n  const handleWordClick = (word, index) => {\n    // 更新高亮状态\n    const updatedText = [...processedText];\n    updatedText.forEach((w, i) => {\n      w.highlighted = i === index;\n    });\n    setProcessedText(updatedText);\n    setSelectedWord(word.clean);\n    fetchWordDetails(word.clean);\n  };\n\n  // 播放单词发音\n  const playAudio = () => {\n    if (wordDetails && wordDetails.phonetics && wordDetails.phonetics.length > 0) {\n      var _wordDetails$phonetic;\n      const audioUrl = (_wordDetails$phonetic = wordDetails.phonetics.find(p => p.audio)) === null || _wordDetails$phonetic === void 0 ? void 0 : _wordDetails$phonetic.audio;\n      if (audioUrl) {\n        const audio = new Audio(audioUrl);\n        audio.play();\n      }\n    }\n  };\n\n  // 更新设置\n  const updateSettings = newSettings => {\n    setSettings({\n      ...settings,\n      ...newSettings\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSettingsClick: () => setShowSettings(!showSettings)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(Settings, {\n      settings: settings,\n      onUpdate: updateSettings,\n      onClose: () => setShowSettings(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          text: text,\n          onTextChange: setText,\n          onGenerateClick: processText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), processedText.length > 0 && /*#__PURE__*/_jsxDEV(ReadingContent, {\n          words: processedText,\n          onWordClick: handleWordClick,\n          fontSize: settings.fontSize,\n          lineHeight: settings.lineHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: selectedWord && /*#__PURE__*/_jsxDEV(WordDetail, {\n          word: selectedWord,\n          details: wordDetails,\n          loading: loading,\n          error: error,\n          onPlayAudio: playAudio,\n          showPhonetics: settings.showPhonetics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JWK+RFbu4BfgrnuCDtrKMMkXgz0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","ReadingContent","WordDetail","Header","TextInput","Settings","jsxDEV","_jsxDEV","App","_s","text","setText","processedText","setProcessedText","selectedWord","setSelectedWord","wordDetails","setWordDetails","loading","setLoading","error","setError","showSettings","setShowSettings","settings","setSettings","fontSize","lineHeight","showPhonetics","autoPlayAudio","processText","trim","words","split","map","word","punctuationBefore","match","punctuationAfter","cleanWord","replace","original","clean","toLowerCase","highlighted","fetchWordDetails","response","get","data","phonetics","length","_response$data$0$phon","audioUrl","find","p","audio","Audio","play","err","console","handleWordClick","index","updatedText","forEach","w","i","playAudio","_wordDetails$phonetic","updateSettings","newSettings","className","children","onSettingsClick","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","onClose","onTextChange","onGenerateClick","onWordClick","details","onPlayAudio","_c","$RefreshReg$"],"sources":["/Users/zhangchenyu/Downloads/eng2025/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ReadingContent from './components/ReadingContent';\nimport WordDetail from './components/WordDetail';\nimport Header from './components/Header';\nimport TextInput from './components/TextInput';\nimport Settings from './components/Settings';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [processedText, setProcessedText] = useState([]);\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [wordDetails, setWordDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [settings, setSettings] = useState({\n    fontSize: 16,\n    lineHeight: 1.6,\n    showPhonetics: true,\n    autoPlayAudio: false\n  });\n\n  // 处理文本，将其分割成单词数组\n  const processText = () => {\n    if (!text.trim()) return;\n    \n    // 将文本分割成单词，保留标点符号\n    const words = text.split(/\\s+/).map(word => {\n      // 去除单词前后的标点符号，但保留它们以便显示\n      const punctuationBefore = word.match(/^[^\\w\\s]+/) ? word.match(/^[^\\w\\s]+/)[0] : '';\n      const punctuationAfter = word.match(/[^\\w\\s]+$/) ? word.match(/[^\\w\\s]+$/)[0] : '';\n      const cleanWord = word.replace(/^[^\\w\\s]+|[^\\w\\s]+$/g, '');\n      \n      return {\n        original: word,\n        clean: cleanWord.toLowerCase(),\n        punctuationBefore,\n        punctuationAfter,\n        highlighted: false\n      };\n    });\n    \n    setProcessedText(words);\n  };\n\n  // 获取单词详情\n  const fetchWordDetails = async (word) => {\n    if (!word) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n      setWordDetails(response.data[0]);\n      \n      // 如果设置了自动播放，则播放单词发音\n      if (settings.autoPlayAudio && response.data[0].phonetics && response.data[0].phonetics.length > 0) {\n        const audioUrl = response.data[0].phonetics.find(p => p.audio)?.audio;\n        if (audioUrl) {\n          const audio = new Audio(audioUrl);\n          audio.play();\n        }\n      }\n    } catch (err) {\n      setError('无法获取单词详情，请稍后再试。');\n      console.error('Error fetching word details:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理单词点击事件\n  const handleWordClick = (word, index) => {\n    // 更新高亮状态\n    const updatedText = [...processedText];\n    updatedText.forEach((w, i) => {\n      w.highlighted = i === index;\n    });\n    setProcessedText(updatedText);\n    \n    setSelectedWord(word.clean);\n    fetchWordDetails(word.clean);\n  };\n\n  // 播放单词发音\n  const playAudio = () => {\n    if (wordDetails && wordDetails.phonetics && wordDetails.phonetics.length > 0) {\n      const audioUrl = wordDetails.phonetics.find(p => p.audio)?.audio;\n      if (audioUrl) {\n        const audio = new Audio(audioUrl);\n        audio.play();\n      }\n    }\n  };\n\n  // 更新设置\n  const updateSettings = (newSettings) => {\n    setSettings({ ...settings, ...newSettings });\n  };\n\n  return (\n    <div className=\"app\">\n      <Header onSettingsClick={() => setShowSettings(!showSettings)} />\n      \n      {showSettings && (\n        <Settings \n          settings={settings} \n          onUpdate={updateSettings} \n          onClose={() => setShowSettings(false)} \n        />\n      )}\n      \n      <div className=\"main-content\">\n        <div className=\"left-panel\">\n          <TextInput \n            text={text} \n            onTextChange={setText} \n            onGenerateClick={processText} \n          />\n          \n          {processedText.length > 0 && (\n            <ReadingContent \n              words={processedText} \n              onWordClick={handleWordClick} \n              fontSize={settings.fontSize} \n              lineHeight={settings.lineHeight} \n            />\n          )}\n        </div>\n        \n        <div className=\"right-panel\">\n          {selectedWord && (\n            <WordDetail \n              word={selectedWord} \n              details={wordDetails} \n              loading={loading} \n              error={error} \n              onPlayAudio={playAudio} \n              showPhonetics={settings.showPhonetics} \n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}